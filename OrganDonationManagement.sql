CREATE TABLE login(
    username VARCHAR(20) NOT NULL,
    password VARCHAR(20) NOT NULL
);

INSERT INTO login VALUES ('admin','admin');

CREATE TABLE User1(
    User_ID int NOT NULL,
    Name varchar(20) NOT NULL,
    Date_of_Birth date NOT NULL,
    Medical_insurance int,
    Medical_history varchar(20),
    Street varchar(20),
    City varchar(20),
    State varchar(20),
    PRIMARY KEY(User_ID)
);

CREATE TABLE User_phone_no(
    User_ID int NOT NULL,
    phone_no varchar(15),
    FOREIGN KEY(User_ID) REFERENCES User1(User_ID) ON DELETE CASCADE
);


CREATE TABLE Organization(
  Organization_ID int NOT NULL,
  Organization_name varchar(20) NOT NULL,
  Location varchar(20),
  Government_approved int not null,check (Government_approved in(0,1)),
  PRIMARY KEY(Organization_ID)
);

CREATE TABLE Doctor(
  Doctor_ID int NOT NULL,
  Doctor_Name varchar(20) NOT NULL,
  Department_Name varchar(20) NOT NULL,
  organization_ID int NOT NULL,
  FOREIGN KEY(organization_ID) REFERENCES Organization(organization_ID) ON DELETE CASCADE,
  PRIMARY KEY(Doctor_ID)
);

CREATE TABLE Patient(
    Patient_ID int,
    organ_req varchar(20) NOT NULL,
    reason_of_procurement varchar(20),
    Doctor_ID int NOT NULL,
    User_ID int NOT NULL,
    FOREIGN KEY(User_ID) REFERENCES User1(User_ID) ON DELETE CASCADE,
    FOREIGN KEY(Doctor_ID) REFERENCES Doctor(Doctor_ID) ON DELETE CASCADE,
    PRIMARY KEY(Patient_Id)
);

CREATE TABLE Donor(
  Donor_ID int,
  organ_donated varchar(20) NOT NULL,
  reason_of_donation varchar(20),
  Organization_ID int NOT NULL,
  User_ID int NOT NULL,
  FOREIGN KEY(User_ID) REFERENCES User1(User_ID) ON DELETE CASCADE,
  FOREIGN KEY(Organization_ID) REFERENCES Organization(Organization_ID) ON DELETE CASCADE,
  PRIMARY KEY(Donor_ID)
);

CREATE TABLE Organ_available(
  Organ_ID int GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
  Organ_name varchar(20) NOT NULL,
  Donor_ID int NOT NULL,
  FOREIGN KEY(Donor_ID) REFERENCES Donor(Donor_ID) ON DELETE CASCADE,
  PRIMARY KEY(Organ_ID)
);

CREATE TABLE Transaction(
  Patient_ID int NOT NULL UNIQUE,
  Organ_ID int NOT NULL,
  Donor_ID int NOT NULL,
  Date_of_transaction date NOT NULL,
  Status int NOT NULL,check( Status in(1,0)),
  FOREIGN KEY(Patient_ID) REFERENCES Patient(Patient_ID) ON DELETE CASCADE,
  FOREIGN KEY(Donor_ID) REFERENCES Donor(Donor_ID) ON DELETE CASCADE,
  PRIMARY KEY(Patient_ID,Organ_ID)
);


CREATE TABLE Organization_phone_no(
  Organization_ID int NOT NULL,
  Phone_no varchar(15),
  FOREIGN KEY(Organization_ID) REFERENCES Organization(Organization_ID) ON DELETE CASCADE
);


CREATE TABLE Doctor_phone_no(
  Doctor_ID int NOT NULL,
  Phone_no varchar(15),
  FOREIGN KEY(Doctor_ID) REFERENCES Doctor(Doctor_ID) ON DELETE CASCADE
);

CREATE TABLE Organization_head(
  Organization_ID int NOT NULL,
  Employee_ID int NOT NULL,
  Name varchar(20) NOT NULL,
  Date_of_joining date NOT NULL,
  Term_length int NOT NULL,
  FOREIGN KEY(Organization_ID) REFERENCES Organization(Organization_ID) ON DELETE CASCADE,
  PRIMARY KEY(Organization_ID,Employee_ID)
);

insert into User1 values( 1 ,'Name-1','19-8-2001',1,'NIL','Street-1','New Delhi','Delhi');
insert into User1 values( 2 ,'Name-2','10-12-1975',0,'NIL','Street-2','Mumbai','Maharashtra');
insert into User1 values( 3 ,'Name-3','4-6-1976',0,'NIL','Street-3','Mumbai','Maharashtra');
insert into User1 values( 4 ,'Name-4','13-10-1985',1,'NIL','Street-4','Ahmedabad','Gujarat');
insert into User1 values( 5 ,'Name-5','12-10-1983',1,'NIL','Street-5','Kolkata','West Bengal');
insert into User1 values( 6 ,'Name-6','18-1-1977',1,'NIL','Street-6','Kolkata','West Bengal');
insert into User1 values( 7 ,'Name-7','26-2-1996',0,'NIL','Street-7','New Delhi','Delhi');
insert into User1 values( 8 ,'Name-8','12-4-1973',1,'NIL','Street-8','Mumbai','Maharashtra');
insert into User1 values( 9 ,'Name-9','1-11-976',0,'NIL','Street-9','Mumbai','Maharashtra');
insert into User1 values( 10 ,'Name-10','18-11-1978',1,'NIL','Street-10','New Delhi','Delhi');
insert into User1 values( 11 ,'Name-11','6-1-1976',1,'NIL','Street-11','Mumbai','Maharashtra');
insert into User1 values( 12 ,'Name-12','1-11-1983',1,'NIL','Street-12','Mumbai','Maharashtra');
insert into User1 values( 13 ,'Name-13','9-1-1989',1,'NIL','Street-13','New Delhi','Delhi');
insert into User1 values( 14 ,'Name-14','5-10-1972',1,'NIL','Street-14','Mumbai','Maharashtra');
insert into User1 values( 15 ,'Name-15','23-9-1986',0,'NIL','Street-15','Ahmedabad','Gujarat');
insert into User1 values( 16 ,'Name-16','26-11-1982',1,'NIL','Street-16','New Delhi','Delhi');
insert into User1 values( 17 ,'Name-17','19-3-1976',0,'NIL','Street-17','Mumbai','Maharashtra');
insert into User1 values( 18 ,'Name-18','17-10-1973',0,'NIL','Street-18','New Delhi','Delhi');
insert into User1 values( 19 ,'Name-19','18-3-1980',0,'NIL','Street-19','Kolkata','West Bengal');
insert into User1 values( 20 ,'Name-20','1-8-1998',1,'NIL','Street-20','Kolkata','West Bengal');
insert into User1 values( 21 ,'Name-21','1-9-1998',1,'NIL','Street-20','Kolkata','West Bengal');

insert into User_phone_no values(1,'9876543215');
insert into User_phone_no values(1,'9876542645');

insert into User_phone_no values(2,'6546543215');
insert into User_phone_no values(3,'9878353215');
insert into User_phone_no values(4,'9876587615');
insert into User_phone_no values(5,'9876542345');
insert into User_phone_no values(6,'8876543215');
insert into User_phone_no values(7,'7976543215');
insert into User_phone_no values(8,'9892543215');
insert into User_phone_no values(9,'9887643215');
insert into User_phone_no values(10,null);


insert into Organization values(1, 'Organization-1','New Delhi',1);
insert into Organization values(2, 'Organization-2','Mumbai',0);
insert into Organization values(3, 'Organization-3','Kolkata',0);
insert into Organization values(4, 'Organization-4','Kolkata',1);
insert into Organization values(5, 'Organization-5','Ahmedabad',1);

insert into Doctor values(1,'Doctor-1','Department-1',1);
insert into Doctor values(2,'Doctor-2','Department-2',1);
insert into Doctor values(3,'Doctor-3','Department-3',2);
insert into Doctor values(4,'Doctor-4','Department-4',2);
insert into Doctor values(5,'Doctor-5','Department-5',3);
insert into Doctor values(6,'Doctor-6','Department-6',3);
insert into Doctor values(7,'Doctor-7','Department-7',5);
insert into Doctor values(8,'Doctor-8','Department-8',4);
insert into Doctor values(9,'Doctor-9','Department-9',5);
insert into Doctor values(10,'Doctor-10','Department-10',3);
insert into Doctor values(11,'Doctor-11','Department-11',4);
insert into Doctor values(12,'Doctor-12','Department-12',1);

insert into Patient values(1,'Heart','Reason-1',1,1);
insert into Patient values(2,'Kidney','Reason-2',2,2);
insert into Patient values(3,'Pancreas','Reason-3',3,4);
insert into Patient values(4,'Kidney','Reason-4',2,5);
insert into Patient values(5,'Heart','Reason-5',1,6);
insert into Patient values(6,'Lung','Reason-6',6,7);
insert into Patient values(7,'Intestine','Reason-7',9,8);
insert into Patient values(8,'Intestine','Reason-8',9,9);
insert into Patient values(9,'Lung','Reason-9',6,10);
insert into Patient values(10,'Kidney','Reason-10',2,3);

insert into Donor values(1,'Heart','Reason-1',1,11);
insert into Donor values(2,'Pancreas','Reason-2',1,12);
insert into Donor values(3,'Pancreas','Reason-3',2,13);
insert into Donor values(4,'Intestine','Reason-4',2,14);
insert into Donor values(5,'Kidney','Reason-5',3,15);
insert into Donor values(6,'Pancreas','Reason-6',4,16);
insert into Donor values(7,'Kidney','Reason-7',5,17);
insert into Donor values(8,'Kidney','Reason-8',5,18);
insert into Donor values(9,'Heart','Reason-9',3,19);
insert into Donor values(10,'Heart','Reason-10',2,20);


insert into Transaction values(1,100,1,'19-9-2014',0);
insert into Transaction values(5,190,9,'30-4-2013',1);
insert into Transaction values(2,154,5,'10-4-2017',1);
insert into Transaction values(4,110,7,'28-9-2013',1);
insert into Transaction values(10,136,8,'27-3-2017',0);
insert into Transaction values(3,128,2,'1-8-2010',0);
insert into Transaction values(7,164,4,'2-4-2012',1);

insert into organization_phone_no values(1,'9871234568');
insert into organization_phone_no values(1,'9457234568');
insert into organization_phone_no values(2,'9871915568');
insert into organization_phone_no values(3,'9845234568');
insert into organization_phone_no values(4,'8871234568');
insert into organization_phone_no values(5,'9871273458');
insert into organization_phone_no values(1,'68712335568');
insert into organization_phone_no values(2,'8871274568');
insert into organization_phone_no values(3,'7871234568');
insert into organization_phone_no values(4,'7871224568');
insert into organization_phone_no values(5,'8871294568');

insert into organization_head values(1,1,'ram','19-9-2019',20);
insert into organization_head values(2,2,'shyam','2-7-2005',20);
insert into organization_head values(3,3,'arjun','13-12-1992',40);
insert into organization_head values(4,4,'harjot','2-1-2017',30);
insert into organization_head values(5,5,'kiran','12-6-2012',27);


create or replace trigger ADD_DONOR
after insert
on Donor
for each row
begin
insert into Organ_available(Organ_name, Donor_ID)
values (:new.organ_donated, :new.Donor_ID);
end;


create or replace trigger REMOVE_ORGAN
after insert
on Transaction
for each row
begin
delete from Organ_available
where Organ_ID = :new.Organ_ID;
end;


insert into donor values(11,'heart','reason-11',3,1);
select*from organ_available;



set serveroutput on
create or replace procedure change_government_approved(a in int,c in int)
is
b Organization%rowtype;
large_value exception;
pragma exception_init(large_value,-02290);
begin
    update Organization set Government_approved=c where Organization_ID =a;
    select *into b from Organization where Organization_ID=a;
    dbms_output.put_line('Organization id:'|| b.Organization_ID);
    dbms_output.put_line('Organization name: '|| b.Organization_name);
    dbms_output.put_line('Location: '|| b.Location);
    dbms_output.put_line('Government approved: '|| b.Government_approved);
    exception
    when large_value then
    dbms_output.put_line('value too big for column');
end change_government_approved;
/
begin
change_government_approved(&Organization_id,&Government_approved);
end;

create or replace procedure change_transaction_status_of_patient(a in int,c in int)
is
b Transaction%rowtype;
large_value exception;
pragma exception_init(large_value,-02290);
begin
    update Transaction set Status=c where Patient_ID =a;
    select *into b from Transaction where Patient_ID=a;
    dbms_output.put_line('Patient id: '|| b.Patient_ID);
    dbms_output.put_line('Organ id: '|| b.Organ_ID);
    dbms_output.put_line('donor id '|| b.Donor_ID);
    dbms_output.put_line('Status: '|| b.Status);
    dbms_output.put_line('date of transaction: '|| b.Date_of_transaction);
    exception
    when large_value then
    dbms_output.put_line('value to big for column');
end change_transaction_status_of_patient;
/
begin
change_transaction_status_of_patient(&patient_id,&status);
end;

create or replace procedure change_transaction_status_of_donor(a in int,c in int)
is
b Transaction%rowtype;
large_value exception;
pragma exception_init(large_value,-02290);

begin
    update Transaction set Status=c where Donor_ID =a;
    select * into b from Transaction where Donor_ID=a;
    dbms_output.put_line('Patient id: '|| b.Patient_ID);
    dbms_output.put_line('Organ id: '|| b.Organ_ID);
    dbms_output.put_line('donor id '|| b.Donor_ID);
    dbms_output.put_line('Status: '|| b.Status);
    dbms_output.put_line('date of transaction: '|| b.Date_of_transaction);
    exception
    when large_value then
    dbms_output.put_line('value to big for column');
end change_transaction_status_of_donor;
/
begin
change_transaction_status_of_donor(&donor_id,&status);
end;

declare
    cursor o1(a int) is
	select * from Organization where Government_approved=a;
begin
for rec in o1(&Government_approved) loop
	dbms_output.put_line('Organisation ID: '||rec.Organization_ID);
	dbms_output.put_line('Organisation name: '||rec.Organization_name);
    dbms_output.put_line('Government Approved: '||rec.Government_approved);
    end loop;
end;

select p.patient_id,p.organ_req ,p.reason_of_procurement,p.doctor_id,p.user_id,u.name,u.date_of_birth,u.medical_insurance,u.medical_history,u.street,u.city,u.state
from Patient p left join User1 u on p.user_id=u.user_id;

select o.organization_id,o.organization_name,o.location,o.Government_approved,
h.employee_id,h.name,h.date_of_joining,h.term_length,
p.phone_no from organization o inner join organization_head h on o.organization_id=h.organization_id inner join organization_phone_no p on h.organization_id=p.organization_id;
